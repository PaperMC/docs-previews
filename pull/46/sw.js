(()=>{"use strict";var e={258:()=>{try{self["workbox:core:6.5.1"]&&_()}catch(e){}},60:()=>{try{self["workbox:precaching:6.5.1"]&&_()}catch(e){}},18:()=>{try{self["workbox:routing:6.5.1"]&&_()}catch(e){}},847:()=>{try{self["workbox:strategies:6.5.1"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(258);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(60);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(847);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(18);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"b29db55794bd450309170b620f6f524b","url":"__docusaurus/debug.html"},{"revision":"2facdb20cacad678a04c875cff7c802c","url":"__docusaurus/debug/config.html"},{"revision":"f14baed5abd8e2d0fe4092daae13674c","url":"__docusaurus/debug/content.html"},{"revision":"43c1ab4510f080f11b6328148a752869","url":"__docusaurus/debug/globalData.html"},{"revision":"96fe1f3107b39bb7b809cd9f81120f55","url":"__docusaurus/debug/metadata.html"},{"revision":"a692fee6b980a6a7ec695570cfe9daa7","url":"__docusaurus/debug/registry.html"},{"revision":"52b71c75cbac81e0fecd2ab0275afb2b","url":"__docusaurus/debug/routes.html"},{"revision":"df6d31d7a2ea7c12223f77431ee62606","url":"404.html"},{"revision":"0a08c8e03fea4d89b128f6f2a96c770f","url":"assets/css/styles.98cd7ce5.css"},{"revision":"65cc66c0d9122f42ec7a82ec97004006","url":"assets/js/107.6ecc6903.js"},{"revision":"8e62da10c706734f1ce076e4b3d4df73","url":"assets/js/1109.8e3c6535.js"},{"revision":"57da15553df77e34c806d27a64a94865","url":"assets/js/1145.7c645c25.js"},{"revision":"36cf50cfa94d36c69e6688d9867aa782","url":"assets/js/1230.f700342d.js"},{"revision":"1024cdf75f8348d38110baa039753160","url":"assets/js/1284.4f0696c0.js"},{"revision":"eb2973b331c2def5010d7a2672c314d0","url":"assets/js/132.b516ea0a.js"},{"revision":"f3081033195b2b287de161d23953a060","url":"assets/js/1467.0fa68c95.js"},{"revision":"91f029cc10fc41dd4d8324f885b2cce6","url":"assets/js/1798.3d41d2ca.js"},{"revision":"9b4fd1c058e76a08b941de8a810ae0a7","url":"assets/js/2144.3972ac77.js"},{"revision":"cb6a951e81f9c819da6952bbd246313c","url":"assets/js/2377.781c02c6.js"},{"revision":"08340a60dc5f5ac98a12898d236b9f95","url":"assets/js/244.4b67fecb.js"},{"revision":"7e0c52fbd7268f66b2e645d8c73a85d2","url":"assets/js/2486.814415b6.js"},{"revision":"20d1478d9f419b3e59af7dc353cce065","url":"assets/js/2703.c9ce792d.js"},{"revision":"bc618028f1916ae8a5dc13822fbab198","url":"assets/js/2790.75c8ae64.js"},{"revision":"9aea2222fa56e853e29267b346c5a052","url":"assets/js/3210.c80a0437.js"},{"revision":"96fc93f0a2cfb0f4642ac04f86c0e43f","url":"assets/js/3414.21561d85.js"},{"revision":"54b2ede528aae8157363aba249c0d2c9","url":"assets/js/3529.1eed9b6c.js"},{"revision":"02e934912f58e306fc4fd9ddb3d1339b","url":"assets/js/3541.5a3797f3.js"},{"revision":"bdc06abbc74dace7ddeb6247fbc209a9","url":"assets/js/3742.65b74734.js"},{"revision":"412db3442e6dc55e6f4bddf1e673974d","url":"assets/js/3769.99aee934.js"},{"revision":"96e5a981cfe60a14d3702197196440ea","url":"assets/js/390.5c2d71b9.js"},{"revision":"4c628edada90c0129168e66ae072a02b","url":"assets/js/3984.1615e72b.js"},{"revision":"6e6d7a57ef75df6ca210a5d0350f896f","url":"assets/js/4202.f40a7b18.js"},{"revision":"533ebad611a7e0f96838c872f2a9ad6d","url":"assets/js/4282.476da4ad.js"},{"revision":"14b3e3101a2d0503cc4d64481b98d1b9","url":"assets/js/4296.140da220.js"},{"revision":"cc66cd1200cc8eab2356ef0a429dae05","url":"assets/js/4413.d2072c77.js"},{"revision":"d13ef0961e4895235af36820d9d4f77b","url":"assets/js/4459.700b6066.js"},{"revision":"c955374c961f92ad1dd1807fa5853552","url":"assets/js/4474.cc431dbe.js"},{"revision":"3f7c4b7225f0bd9d823ebe60dab9e02a","url":"assets/js/4508.944b8a76.js"},{"revision":"9aab433b3dd002a6ac7a144b1e839bb2","url":"assets/js/4549.085770ef.js"},{"revision":"00c086ae175429b5f7c2ea51cb746f10","url":"assets/js/4864.1b6304e8.js"},{"revision":"8cc387b6bbc32696ae7754b557dfc988","url":"assets/js/5260.c03b7ff3.js"},{"revision":"4493095ffe9d57026e6cd8e3d8b38ac0","url":"assets/js/5382.d98624c0.js"},{"revision":"15a69a438cd1995a7a334ba5233d0e79","url":"assets/js/5441.b33fe317.js"},{"revision":"1317e82652012866b00ab39250fa51ee","url":"assets/js/5528.c8f55225.js"},{"revision":"a981419232badc7210b98eca9547bc07","url":"assets/js/5550.c6606647.js"},{"revision":"a821d1e739d0fb4a155b48d04b13d226","url":"assets/js/560.561ce0e3.js"},{"revision":"cea9fcb8101ffbc3abccd58bdf587b79","url":"assets/js/5745.c0b8e8e0.js"},{"revision":"05676477f50f2dcf8df2a1dd30f518b3","url":"assets/js/5902.1975ac87.js"},{"revision":"fb344538e0263f0cb0b97519d9d8357a","url":"assets/js/6049.85d25197.js"},{"revision":"e263a7a2fc948475ef93bf6b79787c80","url":"assets/js/6158.00d2d9c5.js"},{"revision":"dd44bc0c43e95b48f6c6bfd397d9bc35","url":"assets/js/619.7366991b.js"},{"revision":"112112431dfedc8d32ff756cd24de1ce","url":"assets/js/6267.77554300.js"},{"revision":"e96ebb3c66ba7ff569de64ed3057a483","url":"assets/js/6832.6cfa529b.js"},{"revision":"73d08718476c81e5855db97e8146b2a4","url":"assets/js/6833.d0db5a59.js"},{"revision":"b37dfebbe73e2d5926fffdacfd5322de","url":"assets/js/6842.24ef9d6b.js"},{"revision":"4f9d17b356f13b642ad529b087936a9d","url":"assets/js/7055.9fd49d78.js"},{"revision":"03e7ca8c6fa82939e55d6d17d55b64a0","url":"assets/js/7085.38534a25.js"},{"revision":"da5477cd5d39d8e32e1f72997e7d6869","url":"assets/js/7162.673cd331.js"},{"revision":"7c6d150f0661a4f5de3210155e5b6cfa","url":"assets/js/7310.3dabe808.js"},{"revision":"9551460563bd731ad551d0c301c4b769","url":"assets/js/7426.7671fd40.js"},{"revision":"7781a878afa076d5a3ca8eea11d69bf7","url":"assets/js/7595.1508737a.js"},{"revision":"471c5f3248a350e16395ea142ba0d538","url":"assets/js/7778.5fad136d.js"},{"revision":"d765cc0e16b274963726c5a517e29486","url":"assets/js/7937.188b784b.js"},{"revision":"2f6d1653265b220f8894034204f7de13","url":"assets/js/8119.e073ff2c.js"},{"revision":"0fce8c599fdd4dc4fd88102b8ce22cbf","url":"assets/js/8179.2192445f.js"},{"revision":"df867799063a18807de7480165f3d31e","url":"assets/js/8330.a8e2e974.js"},{"revision":"87cc792ed443fbde86c50ff72ab4f85e","url":"assets/js/8340.c8b9f0b1.js"},{"revision":"c64ffba805c1e4e1016b6ac8dd06229d","url":"assets/js/8664.afd3bb47.js"},{"revision":"84f7ef135338088c3085432c2a5e5f0d","url":"assets/js/8772.f375e6ae.js"},{"revision":"77d12ae5a3f83dc3c48ba20e26b7194b","url":"assets/js/9076.58376b68.js"},{"revision":"387196f691d90a72d371c5ff672812f3","url":"assets/js/9108.fc79517b.js"},{"revision":"969cc9e36c49c646b127a00a704765a0","url":"assets/js/9348.7622364e.js"},{"revision":"f7a0d27fe6316646639a3a2d8337e20d","url":"assets/js/9418.68e02df6.js"},{"revision":"2747bf729b3637dbba6b17e3886765bc","url":"assets/js/9768.9c3ccdad.js"},{"revision":"93fca6c6e9e9ae77757060c1711ea98a","url":"assets/js/main.dd630460.js"},{"revision":"42862e2668a7711db56265351d6ea5db","url":"assets/js/runtime~main.396865e9.js"},{"revision":"5560ffc37d4ed35ac99fa935715d0cd4","url":"index.html"},{"revision":"5b23612e479b76d9ec80c94dc820ad5d","url":"intro.html"},{"revision":"d784185df358d3ed43ae879670dce6c0","url":"java-install-update.html"},{"revision":"9de0c1c99854cb76025abff99c9590c3","url":"manifest.json"},{"revision":"42e76e44d6115f266376f5bb0dafc9fb","url":"paper.html"},{"revision":"df487a51de6bed1e306696a6b41971e6","url":"paper/aikars-flags.html"},{"revision":"090c89958b8cedcd2d6f1ea89f8e6c54","url":"paper/anti-xray.html"},{"revision":"d3110c6270f6e1c94f13e712a7599364","url":"paper/getting-started.html"},{"revision":"f6b559e9179822379748120689b5a453","url":"paper/getting-started/adding-plugins.html"},{"revision":"b54bc9fea7f97734cea70f7512876b7a","url":"paper/migration.html"},{"revision":"d98c684b5c71ad78d515c46938aa053f","url":"paper/per-world-configuration.html"},{"revision":"de08c20e0db81ec8bb11838478d15624","url":"paper/reference/paper-global-configuration.html"},{"revision":"0a00fc72a2b7aa19cd363a2ebe8a12d1","url":"paper/reference/paper-per-world-configuration.html"},{"revision":"3010e23961e21c8c9726d09955bc2e75","url":"paper/updating.html"},{"revision":"cebf2b88ec7de0b0bea9469f01bec0b7","url":"papermc/assets.html"},{"revision":"24901bc8ebf866f7ac8975f43ca62425","url":"papermc/contact.html"},{"revision":"99f973de8dbb691a07bfb1a54f2922e8","url":"papermc/downloads-api.html"},{"revision":"f6a4e9149c7391e73aabe6d11ffbb521","url":"search.html"},{"revision":"3c514108095f35f0a504ba81258a2b42","url":"velocity.html"},{"revision":"8abb2cd348b857d07eed65f7f6b558e1","url":"velocity/built-in-commands.html"},{"revision":"bcf0400cc550a6ac6548aa6c93ce60f7","url":"velocity/comparisons-to-other-proxies.html"},{"revision":"81ce8cdc0e7fa7e1322ed02c8d8ddc22","url":"velocity/configuration.html"},{"revision":"bc756522670902d03d27d132c656f548","url":"velocity/credits.html"},{"revision":"c4d6b6093d8f3d687b70b08c9ca4bcef","url":"velocity/developers.html"},{"revision":"76186e05ba5254943e72e6751bc9d8a2","url":"velocity/developers/api-basics.html"},{"revision":"90f27968b20cdd9d5145372d7847c952","url":"velocity/developers/command-api.html"},{"revision":"f743fd941f6103fd5ad68310ace006f7","url":"velocity/developers/creating-your-first-plugin.html"},{"revision":"5027bb5d0ab81dd4ab83f9b2d3eeec24","url":"velocity/developers/dependency-management.html"},{"revision":"102a06363c30b773e282b4e1b5038314","url":"velocity/developers/event-api.html"},{"revision":"3fb5f11ebdafbf517e72b46ee3e5558c","url":"velocity/developers/pitfalls.html"},{"revision":"9415249d7d62fb64c58511788aad5ab0","url":"velocity/developers/porting-plugins-from-velocity-1.html"},{"revision":"b85016c05856dc9908303de215b6dff4","url":"velocity/developers/scheduler-api.html"},{"revision":"12ee99f140ff81bff0f751909788cabc","url":"velocity/faq.html"},{"revision":"dd4430983f6a3ac3830814cbcd6e687a","url":"velocity/getting-started.html"},{"revision":"ea2588832511acb1ce1b09aab412876a","url":"velocity/migration.html"},{"revision":"ade9bdc088a051ca933bb89dadefb250","url":"velocity/player-information-forwarding.html"},{"revision":"e2b6a749949372b574680ab9e6d4417f","url":"velocity/security.html"},{"revision":"e1dc40bd98759d72057f5bf026d84324","url":"velocity/server-compatibility.html"},{"revision":"5072b8b2fbfea50daff4b31c322b6e1c","url":"velocity/tuning.html"},{"revision":"740dc1bdcf4b8b18cc7f623d0845253a","url":"velocity/why-velocity.html"},{"revision":"d814a06630e8dba25e5773a51d33088c","url":"waterfall.html"},{"revision":"2e851b9ad49c260a210da061dbde5c51","url":"waterfall/configuration.html"},{"revision":"598e3a5b23ba64110e6749126617e281","url":"waterfall/getting-started.html"},{"revision":"4f12cdd8785605ddeb7c202a196e7d35","url":"assets/images/anti-xray-nether-05e6e894ce876f94d4463e1f491d1030.png"},{"revision":"ac61b2cd736aeb124ece24c782c63560","url":"assets/images/anti-xray-overworld-3443fb41851dc5d9082f2956268232a1.png"},{"revision":"728cb4af05ea79eca18631a0a7f5950e","url":"assets/images/papermc_logomark_500-b69f67cabd469b3d0485c20a912e84fc.png"},{"revision":"2cc84f324fa1386d14831b64d1c303fb","url":"assets/images/pterodactyl-manual-59004882b8766e775ceefd62de2cbc50.png"},{"revision":"f923cb235d9275c8e766c27f6e8646a6","url":"assets/images/pterodactyl-prompt-08eaa04490182b153a7e203d414da64b.png"},{"revision":"27a331ad0d4f9b1b056d7aa7c497380c","url":"img/favicon.ico"},{"revision":"cf40f7154e8833e87c5a15b3c19cec64","url":"img/icons/icon-128x128.png"},{"revision":"d8c14f548f07f8b9f34900842e514de3","url":"img/icons/icon-144x144.png"},{"revision":"2352005bdb6116062586418be2feb0ee","url":"img/icons/icon-152x152.png"},{"revision":"69e1e4818e8c72f0b3faf7a71abeda26","url":"img/icons/icon-192x192.png"},{"revision":"e603d44fde637d0428169e42314c3039","url":"img/icons/icon-384x384.png"},{"revision":"ebde541848f562b741056bde05472bba","url":"img/icons/icon-512x512.png"},{"revision":"1fbf5b497e5d12fd86393175f9eaf139","url":"img/icons/icon-72x72.png"},{"revision":"50adede2c2bda637f507879fbb543480","url":"img/icons/icon-96x96.png"},{"revision":"69b156c91d208aff640e1016c38fb004","url":"img/logo.svg"},{"revision":"23c02a74c76235daf1a513381ba42449","url":"img/og-image.png"},{"revision":"249f3a6448ee743c8f87f15dd0c0b48c","url":"img/paper.png"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=[],s=new URL(e,self.location.href);return s.origin!==self.location.origin||(s.search="",s.hash="",t.push(s.href),s.pathname.endsWith("/")?t.push(`${s.href}index.html`):t.push(`${s.href}/index.html`)),t}(a);for(let i=0;i<n.length;i+=1){const r=n[i],c=s.getCacheKeyForURL(r);if(c){const s=caches.match(c);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:r,possibleURLs:n,cacheKey:c,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})()})();
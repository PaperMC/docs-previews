(()=>{"use strict";var e={258:()=>{try{self["workbox:core:6.5.1"]&&_()}catch(e){}},60:()=>{try{self["workbox:precaching:6.5.1"]&&_()}catch(e){}},18:()=>{try{self["workbox:routing:6.5.1"]&&_()}catch(e){}},847:()=>{try{self["workbox:strategies:6.5.1"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(258);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(60);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(847);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(18);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"d233522c6b67ccc8ad4da9cc1077d855","url":"__docusaurus/debug.html"},{"revision":"fbbc8d496520e187b247572b9d3fd301","url":"__docusaurus/debug/config.html"},{"revision":"5eb2098f0da3815bed87ac9ffdfbdc65","url":"__docusaurus/debug/content.html"},{"revision":"f1c144c56cb0e5ab70e1f54d10602740","url":"__docusaurus/debug/globalData.html"},{"revision":"351476a0d55a61d8103cbaf7474c3612","url":"__docusaurus/debug/metadata.html"},{"revision":"01f9aad4911dc7d6130bc20ce3755ce5","url":"__docusaurus/debug/registry.html"},{"revision":"349f1e44f91b34ad3bb9180ab31b3132","url":"__docusaurus/debug/routes.html"},{"revision":"8ec7c9a51e63e040c73c60b9d5f0be0b","url":"404.html"},{"revision":"0a08c8e03fea4d89b128f6f2a96c770f","url":"assets/css/styles.98cd7ce5.css"},{"revision":"26c282aa0b1817784d037f3f30479a4b","url":"assets/js/107.c4d0b52b.js"},{"revision":"3547594a5e9e32d4afd7060416ee4f9a","url":"assets/js/1109.2d55fab1.js"},{"revision":"57da15553df77e34c806d27a64a94865","url":"assets/js/1145.7c645c25.js"},{"revision":"c6a7179ed895cf197a80e2608c6022f9","url":"assets/js/1230.6994f811.js"},{"revision":"1e7dc9d7c1a3352c2c1902d4924a123f","url":"assets/js/1284.8e590dba.js"},{"revision":"3643318aaac85e652a27f3e90fc6edfd","url":"assets/js/132.732002b2.js"},{"revision":"f3081033195b2b287de161d23953a060","url":"assets/js/1467.0fa68c95.js"},{"revision":"ee5b8216a7f4a3bfc2833882dbb53385","url":"assets/js/1798.c2013e55.js"},{"revision":"9b4fd1c058e76a08b941de8a810ae0a7","url":"assets/js/2144.3972ac77.js"},{"revision":"cb6a951e81f9c819da6952bbd246313c","url":"assets/js/2377.781c02c6.js"},{"revision":"4aee26f2c13650eb35e52576f1a6e626","url":"assets/js/244.881c036a.js"},{"revision":"2f5162b3ce7b1632d40378bd3b6591e7","url":"assets/js/2486.76f836cd.js"},{"revision":"9ad756d431739b7cc4490ee97c8c268b","url":"assets/js/2703.a4971f1e.js"},{"revision":"6165bf2f211ce0328ad49589862f6c54","url":"assets/js/2790.f70118c8.js"},{"revision":"9aea2222fa56e853e29267b346c5a052","url":"assets/js/3210.c80a0437.js"},{"revision":"9a053b88ad57e54dc0fdf93292d544e4","url":"assets/js/3414.41e2141a.js"},{"revision":"54b2ede528aae8157363aba249c0d2c9","url":"assets/js/3529.1eed9b6c.js"},{"revision":"1378c7b2f94e3e625baa53b162949a88","url":"assets/js/3541.45992135.js"},{"revision":"f519373c208995f0ba64b45673dc9507","url":"assets/js/3742.4fccae7a.js"},{"revision":"412db3442e6dc55e6f4bddf1e673974d","url":"assets/js/3769.99aee934.js"},{"revision":"069351359d2186569f1de706fd86b65a","url":"assets/js/390.935ea97a.js"},{"revision":"4c628edada90c0129168e66ae072a02b","url":"assets/js/3984.1615e72b.js"},{"revision":"a4c9bffae4345785b88b9ba4dfd3a428","url":"assets/js/4202.fa0615a2.js"},{"revision":"e065d1af1c1ff150b783436f7fc6dd01","url":"assets/js/4282.f5c3063d.js"},{"revision":"faf865d3138d77ab05b4a490465f7abd","url":"assets/js/4296.19b8356c.js"},{"revision":"b945d2805bfdf6fbcbd210cd3999bfbc","url":"assets/js/4413.edf1a914.js"},{"revision":"d13ef0961e4895235af36820d9d4f77b","url":"assets/js/4459.700b6066.js"},{"revision":"f703eeacd4d86e8d2866470c01efd199","url":"assets/js/4474.8fc06528.js"},{"revision":"b0a94c2fd6dfeeef6954b9325aa1b4c9","url":"assets/js/4508.a80fff98.js"},{"revision":"4aae4ec03bc1e902ff61cd7016b2d811","url":"assets/js/4549.084670df.js"},{"revision":"00c086ae175429b5f7c2ea51cb746f10","url":"assets/js/4864.1b6304e8.js"},{"revision":"09a540a8a6132882d5b107e005a10f79","url":"assets/js/5260.a623e718.js"},{"revision":"381d5beaca98c45f13cd024003999ec2","url":"assets/js/5382.804b3e2c.js"},{"revision":"a62d4b8002b8acddf63930077a78d8d8","url":"assets/js/5441.87d13bd9.js"},{"revision":"8c3c79982a8f51087d73d013e84dc613","url":"assets/js/5528.688acb90.js"},{"revision":"3fe3c27423e02abfb8c78b0f74e92e54","url":"assets/js/5550.58e50bde.js"},{"revision":"c95691fa71b29a6e5b705e462cb37249","url":"assets/js/560.2d2da9c6.js"},{"revision":"cea9fcb8101ffbc3abccd58bdf587b79","url":"assets/js/5745.c0b8e8e0.js"},{"revision":"05676477f50f2dcf8df2a1dd30f518b3","url":"assets/js/5902.1975ac87.js"},{"revision":"9aaf94151942146cf17dc8273f596031","url":"assets/js/6049.df95cd2b.js"},{"revision":"e263a7a2fc948475ef93bf6b79787c80","url":"assets/js/6158.00d2d9c5.js"},{"revision":"dd44bc0c43e95b48f6c6bfd397d9bc35","url":"assets/js/619.7366991b.js"},{"revision":"6f3d6b70b1b14ee2a53131720c8695a3","url":"assets/js/6267.3659804d.js"},{"revision":"e96ebb3c66ba7ff569de64ed3057a483","url":"assets/js/6832.6cfa529b.js"},{"revision":"9545983ad8488c736ebdee55b2f26202","url":"assets/js/6833.d6ae212b.js"},{"revision":"c26bb4428451cde37126d06399d7d8dc","url":"assets/js/6842.5517311c.js"},{"revision":"d842fa8b0c420787ca7cb56637a322b0","url":"assets/js/7055.a0f30105.js"},{"revision":"03e7ca8c6fa82939e55d6d17d55b64a0","url":"assets/js/7085.38534a25.js"},{"revision":"3470bc293e6f440477c59d6fc7923f6d","url":"assets/js/7162.d408e8ff.js"},{"revision":"027aaea3fcfc06f3815213ab0ba08a75","url":"assets/js/7310.2acd5010.js"},{"revision":"9551460563bd731ad551d0c301c4b769","url":"assets/js/7426.7671fd40.js"},{"revision":"7781a878afa076d5a3ca8eea11d69bf7","url":"assets/js/7595.1508737a.js"},{"revision":"471c5f3248a350e16395ea142ba0d538","url":"assets/js/7778.5fad136d.js"},{"revision":"bd72badbff6c8f84c3d8acad8b37243d","url":"assets/js/7937.c803ecd4.js"},{"revision":"5316601d6db14df66122afe15690c967","url":"assets/js/8119.39ed52c7.js"},{"revision":"6446d5ae95095d6b526c02137002c229","url":"assets/js/8179.7946062c.js"},{"revision":"c81ad8cb5e7c6288dd60889abdeae0a7","url":"assets/js/8330.25f795e4.js"},{"revision":"3155a3384d64c40fd05282917dc1c9d0","url":"assets/js/8340.fa19f3ca.js"},{"revision":"c64ffba805c1e4e1016b6ac8dd06229d","url":"assets/js/8664.afd3bb47.js"},{"revision":"6b07f7b58309878d193a9d5f82a8a1bb","url":"assets/js/8772.f222462d.js"},{"revision":"77d12ae5a3f83dc3c48ba20e26b7194b","url":"assets/js/9076.58376b68.js"},{"revision":"31c1d7c5bd956b37074cb575c5c6c068","url":"assets/js/9108.2c7c4e0b.js"},{"revision":"969cc9e36c49c646b127a00a704765a0","url":"assets/js/9348.7622364e.js"},{"revision":"f7a0d27fe6316646639a3a2d8337e20d","url":"assets/js/9418.68e02df6.js"},{"revision":"db425c3dcd8e1d27939471b92e48fc83","url":"assets/js/9768.2972977c.js"},{"revision":"94dc26d15180834b48a71107090cbb7a","url":"assets/js/main.c8c58735.js"},{"revision":"fa5b92f48752eb365c05fe4b516a5ef8","url":"assets/js/runtime~main.3064da23.js"},{"revision":"85c8d86e2b7bb345ed85fdc52a7a0ebd","url":"index.html"},{"revision":"441eb33148a901585cc46f2d6247256a","url":"intro.html"},{"revision":"f1c2d1df4b41e56ac97eca2f146fedd3","url":"java-install-update.html"},{"revision":"9de0c1c99854cb76025abff99c9590c3","url":"manifest.json"},{"revision":"7c620ca6453454ac54574ea87c19f2f7","url":"paper.html"},{"revision":"f7ecc59c73e885e79835b52a895d794a","url":"paper/aikars-flags.html"},{"revision":"c6caa2835ac7c85749fe3f1b9b71faef","url":"paper/anti-xray.html"},{"revision":"122ec40c00c0216a23e3ce7475026cc7","url":"paper/getting-started.html"},{"revision":"5bc6d1859a040b318fd0460dbfb74fd1","url":"paper/getting-started/adding-plugins.html"},{"revision":"6c3e3822893f47f0196dc183b1e11719","url":"paper/migration.html"},{"revision":"0d3cfecd8da8c601ead638b77f743ffe","url":"paper/per-world-configuration.html"},{"revision":"ce42aa4617c5e631387adc41e0670a2d","url":"paper/reference/paper-global-configuration.html"},{"revision":"2171cd53ef126b11002a9007de03c528","url":"paper/reference/paper-per-world-configuration.html"},{"revision":"1d2ac2eb052fef06dabb8efbb638e8b2","url":"paper/updating.html"},{"revision":"2e520064d33b88f8841f49d450850e2a","url":"papermc/assets.html"},{"revision":"f76e7e68d4839778cde7073ec81204c2","url":"papermc/contact.html"},{"revision":"13458417b5ffa8f5748f67618709d9af","url":"papermc/downloads-api.html"},{"revision":"70b69df73552177676d841d19fe82132","url":"search.html"},{"revision":"10157fee3bed6b90690c2a94b93edecb","url":"velocity.html"},{"revision":"e5a56dab12946d9ef8ef81aeed32d567","url":"velocity/built-in-commands.html"},{"revision":"4c6cf2808293c0008a79630ca1ac2b38","url":"velocity/comparisons-to-other-proxies.html"},{"revision":"bf1b706e022bcea886dd12c310f959a4","url":"velocity/configuration.html"},{"revision":"bcc7ac74eb8fcf9b7c59840e4fe4d69d","url":"velocity/credits.html"},{"revision":"68700585794297179613a9a6859515ff","url":"velocity/developers.html"},{"revision":"87c3d53ddae575490bdbb5305b02c1ed","url":"velocity/developers/api-basics.html"},{"revision":"58a93909f868b9a4efe2057bc499e101","url":"velocity/developers/command-api.html"},{"revision":"f09b622cb18a1d656f1c8bfc00108a27","url":"velocity/developers/creating-your-first-plugin.html"},{"revision":"42b96e97c59bb213657f0b6672fbafcf","url":"velocity/developers/dependency-management.html"},{"revision":"03bc2ca47ca56de404c156bf2c595e6d","url":"velocity/developers/event-api.html"},{"revision":"bfd512a33a0fd1f91214f8dadd979bc3","url":"velocity/developers/pitfalls.html"},{"revision":"1e89f2029be595c522a612184ff264f9","url":"velocity/developers/porting-plugins-from-velocity-1.html"},{"revision":"7da8055743ed46761a4bc99a7e51882c","url":"velocity/developers/scheduler-api.html"},{"revision":"9a00c53f6abd0f28e421f667ece5d586","url":"velocity/faq.html"},{"revision":"e10fa43666ac5a4520f369069954a591","url":"velocity/getting-started.html"},{"revision":"6a8b9e27b1d911ade3a306ae661f2b7f","url":"velocity/migration.html"},{"revision":"6fa945d083b8870877248b310d0cb986","url":"velocity/player-information-forwarding.html"},{"revision":"7ad770f2bc99bae1d50b74a1a489ecba","url":"velocity/security.html"},{"revision":"bb832ca51ab16520c2f47d335246c566","url":"velocity/server-compatibility.html"},{"revision":"a674eb578d6e45b79360b27ff5029714","url":"velocity/tuning.html"},{"revision":"e67ef7110a07bf3f48cf6d451b9ff323","url":"velocity/why-velocity.html"},{"revision":"cdcd9e6a8f17928f65f514bf7095500a","url":"waterfall.html"},{"revision":"2c6ccd572715d4a76d01778d1520da7b","url":"waterfall/configuration.html"},{"revision":"3271b744b6c24dd43d87e094c3077955","url":"waterfall/getting-started.html"},{"revision":"4f12cdd8785605ddeb7c202a196e7d35","url":"assets/images/anti-xray-nether-05e6e894ce876f94d4463e1f491d1030.png"},{"revision":"ac61b2cd736aeb124ece24c782c63560","url":"assets/images/anti-xray-overworld-3443fb41851dc5d9082f2956268232a1.png"},{"revision":"728cb4af05ea79eca18631a0a7f5950e","url":"assets/images/papermc_logomark_500-b69f67cabd469b3d0485c20a912e84fc.png"},{"revision":"2cc84f324fa1386d14831b64d1c303fb","url":"assets/images/pterodactyl-manual-59004882b8766e775ceefd62de2cbc50.png"},{"revision":"f923cb235d9275c8e766c27f6e8646a6","url":"assets/images/pterodactyl-prompt-08eaa04490182b153a7e203d414da64b.png"},{"revision":"27a331ad0d4f9b1b056d7aa7c497380c","url":"img/favicon.ico"},{"revision":"cf40f7154e8833e87c5a15b3c19cec64","url":"img/icons/icon-128x128.png"},{"revision":"d8c14f548f07f8b9f34900842e514de3","url":"img/icons/icon-144x144.png"},{"revision":"2352005bdb6116062586418be2feb0ee","url":"img/icons/icon-152x152.png"},{"revision":"69e1e4818e8c72f0b3faf7a71abeda26","url":"img/icons/icon-192x192.png"},{"revision":"e603d44fde637d0428169e42314c3039","url":"img/icons/icon-384x384.png"},{"revision":"ebde541848f562b741056bde05472bba","url":"img/icons/icon-512x512.png"},{"revision":"1fbf5b497e5d12fd86393175f9eaf139","url":"img/icons/icon-72x72.png"},{"revision":"50adede2c2bda637f507879fbb543480","url":"img/icons/icon-96x96.png"},{"revision":"69b156c91d208aff640e1016c38fb004","url":"img/logo.svg"},{"revision":"23c02a74c76235daf1a513381ba42449","url":"img/og-image.png"},{"revision":"249f3a6448ee743c8f87f15dd0c0b48c","url":"img/paper.png"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=[],s=new URL(e,self.location.href);return s.origin!==self.location.origin||(s.search="",s.hash="",t.push(s.href),s.pathname.endsWith("/")?t.push(`${s.href}index.html`):t.push(`${s.href}/index.html`)),t}(a);for(let i=0;i<n.length;i+=1){const r=n[i],c=s.getCacheKeyForURL(r);if(c){const s=caches.match(c);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:r,possibleURLs:n,cacheKey:c,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})()})();
(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.4.2"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.4.2"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.4.2"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.4.2"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"87ebecc83ad2961a0f44ad0de38f4cd4","url":"__docusaurus/debug.html"},{"revision":"39b1d617eae3a663fd694ec5f3781145","url":"__docusaurus/debug/config.html"},{"revision":"b7a9fae7de9ba2f45f60d191965e770e","url":"__docusaurus/debug/content.html"},{"revision":"9c1bbd3aa017bf9ffd28e2e3a87f49e3","url":"__docusaurus/debug/globalData.html"},{"revision":"493c3067415b9b9418340eb01ad3a767","url":"__docusaurus/debug/metadata.html"},{"revision":"a09f9378e7a6aa95f3fbd0a46322c473","url":"__docusaurus/debug/registry.html"},{"revision":"b93ecd7414754a842c78b3adce83ccb8","url":"__docusaurus/debug/routes.html"},{"revision":"1ff002e94be08cdc7fea709d2e8a8809","url":"404.html"},{"revision":"5ef290d9f5790c606c9f7c9a3d4ac645","url":"assets/css/styles.4805d01a.css"},{"revision":"a636121e2fed6a358989cd6b1bde5fd7","url":"assets/js/08c91acd.af98b4d9.js"},{"revision":"fb682834482eb7ecc5bf276d8b1fc9b2","url":"assets/js/17896441.0fce3c67.js"},{"revision":"ff2da51145229f6683a373cc93f917d8","url":"assets/js/19c9239f.a0a792ef.js"},{"revision":"ca880fb8158f54b0e4750de21d3cb5fa","url":"assets/js/1a4e3797.96c1cb78.js"},{"revision":"41dd0ada364152515dfa9d1f2002ee9a","url":"assets/js/1be78505.3da92d80.js"},{"revision":"9861a494409c5313ab1b373fab6a0e30","url":"assets/js/1df93b7f.cbb724dc.js"},{"revision":"c8df6bb74845a7bb5948c513effa50cd","url":"assets/js/230.025153b6.js"},{"revision":"9257011f5ba580f1dd1edabfadbe7164","url":"assets/js/23374ca6.88f3059e.js"},{"revision":"e9f5480b1b769c2cc77af87534e04bfe","url":"assets/js/23abe487.e0e553df.js"},{"revision":"d5d846c29373055976e4527ac3c6a16f","url":"assets/js/246f2c6f.df0e9746.js"},{"revision":"4889b08f38e272fe2dd2767d315d5861","url":"assets/js/278d831b.10f4a341.js"},{"revision":"ca0ba3f178cba0583c1146b28511771a","url":"assets/js/27da239e.4c144136.js"},{"revision":"f50b4dd838388b1015d902f8508d8b23","url":"assets/js/2c700dca.d23ec644.js"},{"revision":"51b139daaf0f803ce3e205e0ea19fc0f","url":"assets/js/2c714a47.fde52c0c.js"},{"revision":"6a86bf0c21f9cb02c05b764aad989de9","url":"assets/js/3450.9b3ef2c5.js"},{"revision":"608b914b95a3732725edbadf98793f6b","url":"assets/js/3bd92c1c.c6f77add.js"},{"revision":"23b236ca708b1a01b7b1e3e96497d489","url":"assets/js/3ca010ae.dcacef76.js"},{"revision":"8ae781cd223b6e4467563b19d48f41a0","url":"assets/js/417802b6.3a25fb29.js"},{"revision":"16a777b23414b11643ebd55975f6c1f5","url":"assets/js/444147dc.e14a3c25.js"},{"revision":"2e1e9554198bd257b8613e3ba45ec923","url":"assets/js/4542f1aa.a55dc335.js"},{"revision":"bde29b2444e8e1ad42692c1e5af6b833","url":"assets/js/45c35fe9.4b6be92e.js"},{"revision":"6150536220c3fc6a840930f351d4bc31","url":"assets/js/4608.7f3155ed.js"},{"revision":"c2d31aeb7ade437efdde16f9fb964795","url":"assets/js/4735cba8.4d8687ee.js"},{"revision":"5f6fc5d18da7e30d3c70024c239174fd","url":"assets/js/5131.023cfe0f.js"},{"revision":"b634454a0456d9950c4e61cedee94a10","url":"assets/js/5283.2c52b05b.js"},{"revision":"2fd71c070c2296ea262a1b7ec68f21d8","url":"assets/js/59b20312.395e7dd0.js"},{"revision":"eef3abd3a7ec7deaac69d2c8e5138ba5","url":"assets/js/6794d4cd.d8b7ef14.js"},{"revision":"ce7f72eee5e0653199ab25bcdc86e81c","url":"assets/js/6815.8f5a7408.js"},{"revision":"f9ce7c4d06703a143564f28baa845875","url":"assets/js/6856bc5e.8b78ff18.js"},{"revision":"6ff6425450112c91f94f5e0478135a70","url":"assets/js/68e633d4.ea9b947b.js"},{"revision":"5a0aafccc443095b70527b12cb815750","url":"assets/js/6945.7e7c6451.js"},{"revision":"07cb10e0a1f62d8b6a2406805c4dbd4e","url":"assets/js/7109fcb9.24c23f90.js"},{"revision":"f8368ee1abc70eed20e4871d4ce35654","url":"assets/js/7556a661.a856d16c.js"},{"revision":"6e418399e14fd570c5af493bc905088e","url":"assets/js/8894.8579f5eb.js"},{"revision":"d72594a3d0601c24396f4c19863c9432","url":"assets/js/93426447.591b3bdd.js"},{"revision":"f6c94bef05e5bb00490739a5415237c0","url":"assets/js/935f2afb.4c7b204d.js"},{"revision":"7a322fd8821db2872e2dc206d2062d6c","url":"assets/js/946bd85a.f5ef0c45.js"},{"revision":"0d5cfe272be337fcb5bc237d74e4cdda","url":"assets/js/9720aa09.94372aa6.js"},{"revision":"d80ad72ebf1c5d2ec85b23e8bd0e589e","url":"assets/js/b0dd63e9.531e77c8.js"},{"revision":"699a9a7ef3b6ff82e26fbba77ca0588a","url":"assets/js/b326c38e.7ad775e3.js"},{"revision":"7d54af79b7f35919a001d4ebcf0a39ad","url":"assets/js/b8c60b87.5bd55cdf.js"},{"revision":"9d08d5c415a3142e54071647792def17","url":"assets/js/ba8b3534.be981aca.js"},{"revision":"b57276eac2eb41203f761e2d5fb8dc07","url":"assets/js/bd0ab364.b3d9005a.js"},{"revision":"c58ad46d752fab7b639d7452a5744271","url":"assets/js/c18f6375.74feb0df.js"},{"revision":"b25c6448d2add2bbafacc4fb3e0d8d04","url":"assets/js/c19b4e8e.b2a7b512.js"},{"revision":"f65e516654179a2aeb53d63d96ace7cc","url":"assets/js/cf08fff7.57f1db57.js"},{"revision":"3c4bd0922eddfdb5705e6e86ec43fb39","url":"assets/js/d50d5676.7850fd35.js"},{"revision":"465e994b6cfe15c7137f2d66e47a4941","url":"assets/js/d70a5677.77724c87.js"},{"revision":"d95b3c4a9b4cc4e4ed7e42e383cce937","url":"assets/js/d8af3d6e.faa84ab2.js"},{"revision":"efec86a101dec9e2b3497f8bd4f90aac","url":"assets/js/de48decc.a6534f96.js"},{"revision":"76197b04b6f467ba60e02915e2acf43a","url":"assets/js/decc4105.f7560db2.js"},{"revision":"0229741f966e38a42ec81e1d8a1aa165","url":"assets/js/df759228.3159e818.js"},{"revision":"aa2431629437b86a166d565fc6108298","url":"assets/js/e36987ae.cce1962a.js"},{"revision":"733b6131d30bcf1dc8326ee80072709d","url":"assets/js/ede3a018.f4472f61.js"},{"revision":"400f8e66aa70d3df826d24c9bac5f725","url":"assets/js/f92d365d.46753a4c.js"},{"revision":"5ad9526731192c44970145383d91cdc9","url":"assets/js/fdb945e9.31675af9.js"},{"revision":"f466f67477dd06f59c4e2a61a972cb6d","url":"assets/js/ff7bed0d.0c047acc.js"},{"revision":"a9390342f40acbe5b8d1dbf6618a9135","url":"assets/js/main.6cc79489.js"},{"revision":"946aec34c9067564f89a2a1095e838c0","url":"assets/js/runtime~main.e2d1e535.js"},{"revision":"9bdffc8100fa0e1ad186297b2aa34398","url":"index.html"},{"revision":"f0ca60833802baae7b98ed4d3ead10d6","url":"intro.html"},{"revision":"d6c4ec92e38dde26b26cba4fed642ce4","url":"java-install-update.html"},{"revision":"9de0c1c99854cb76025abff99c9590c3","url":"manifest.json"},{"revision":"7c38fd69b078062292194ded928a53d5","url":"paper.html"},{"revision":"5607fc77e56ce6323880eb3929b12326","url":"paper/aikars-flags.html"},{"revision":"c7eaf8de1ffa39a6d47d8a0f1f2a92dc","url":"paper/getting-started.html"},{"revision":"558228b96f442cd2352eb67b4e0c3319","url":"paper/per-world-configuration.html"},{"revision":"14befcb2d7523ebd95a584ca98ab9287","url":"paper/reference/paper-global-configuration.html"},{"revision":"46c1d02950bafdeebcc794210ce54630","url":"paper/reference/paper-per-world-configuration.html"},{"revision":"161ec42fcb92f651dc3d037a8b3017ee","url":"paper/updating.html"},{"revision":"af61fafbfb73a3d42ae1d6021d44109a","url":"papermc/assets.html"},{"revision":"c78dd6b460076441b25ebe8a5b654dd0","url":"papermc/contact.html"},{"revision":"7664757263baf4e94588c06706324068","url":"papermc/downloads-api.html"},{"revision":"cf6fda54883f0969349345643ad78dca","url":"search.html"},{"revision":"39472ae9ae75fdd1d38f6c91c19d044b","url":"velocity.html"},{"revision":"b2033124f97c4391d5b076ced392cfee","url":"velocity/built-in-commands.html"},{"revision":"09018d8fcd6384d1e74d336757ce393e","url":"velocity/comparisons-to-other-proxies.html"},{"revision":"e9263ef15cae01305968e9b6547f7cb3","url":"velocity/configuration.html"},{"revision":"936c5926ce26f93c015eea83a00e4744","url":"velocity/credits.html"},{"revision":"2fb86b32ef5edc26b3e1d341db231e08","url":"velocity/developers.html"},{"revision":"e559081790dc31d163e8e39f53f8fc30","url":"velocity/developers/api-basics.html"},{"revision":"4a4972c70b03a1d361f1fd4cdcc45882","url":"velocity/developers/command-api.html"},{"revision":"a59e116fae64acaa4a9a6124785e4a8d","url":"velocity/developers/creating-your-first-plugin.html"},{"revision":"fd7083bf1b56f4c7820806c581ac47ba","url":"velocity/developers/dependency-management.html"},{"revision":"cde7a856cc24299c004ee91a3df53cf5","url":"velocity/developers/event-api.html"},{"revision":"9dc87aaff9a046fae3e342d49f91d47c","url":"velocity/developers/pitfalls.html"},{"revision":"39ca692f053d4894978dc9ba08f4770a","url":"velocity/developers/porting-plugins-from-velocity-1.html"},{"revision":"e8a5379fe2c59ab3ff1202610cfb302e","url":"velocity/developers/scheduler-api.html"},{"revision":"23128e834147a8690fdc7a118366c132","url":"velocity/faq.html"},{"revision":"5a18b6cbb74135c363b5964c0cf6ac7a","url":"velocity/getting-started.html"},{"revision":"107ae3d639ae2fb720e48d351c0009a2","url":"velocity/migration.html"},{"revision":"15953cb095b0713c18650c001f9df7c0","url":"velocity/player-information-forwarding.html"},{"revision":"319f2ef459da5dec784d0df7ff18449d","url":"velocity/security.html"},{"revision":"79a06bd0bccd694c251f991538240790","url":"velocity/server-compatibility.html"},{"revision":"e3b2e25cbd533fbfe13b27b66072e7ca","url":"velocity/tuning.html"},{"revision":"cce889a037ccb0511a691b6fe58a0740","url":"velocity/why-velocity.html"},{"revision":"d29bd03ed3ab1ee32a3c7b0bad7d93d8","url":"waterfall.html"},{"revision":"bda09cbdb1d645ce2684e5b0e76596ca","url":"waterfall/configuration.html"},{"revision":"e3f71c08bc6f30e3db60d825013ff8a1","url":"waterfall/getting-started.html"},{"revision":"728cb4af05ea79eca18631a0a7f5950e","url":"assets/images/papermc_logomark_500-b69f67cabd469b3d0485c20a912e84fc.png"},{"revision":"2cc84f324fa1386d14831b64d1c303fb","url":"assets/images/pterodactyl-manual-59004882b8766e775ceefd62de2cbc50.png"},{"revision":"f923cb235d9275c8e766c27f6e8646a6","url":"assets/images/pterodactyl-prompt-08eaa04490182b153a7e203d414da64b.png"},{"revision":"27a331ad0d4f9b1b056d7aa7c497380c","url":"img/favicon.ico"},{"revision":"cf40f7154e8833e87c5a15b3c19cec64","url":"img/icons/icon-128x128.png"},{"revision":"d8c14f548f07f8b9f34900842e514de3","url":"img/icons/icon-144x144.png"},{"revision":"2352005bdb6116062586418be2feb0ee","url":"img/icons/icon-152x152.png"},{"revision":"69e1e4818e8c72f0b3faf7a71abeda26","url":"img/icons/icon-192x192.png"},{"revision":"e603d44fde637d0428169e42314c3039","url":"img/icons/icon-384x384.png"},{"revision":"ebde541848f562b741056bde05472bba","url":"img/icons/icon-512x512.png"},{"revision":"1fbf5b497e5d12fd86393175f9eaf139","url":"img/icons/icon-72x72.png"},{"revision":"50adede2c2bda637f507879fbb543480","url":"img/icons/icon-96x96.png"},{"revision":"69b156c91d208aff640e1016c38fb004","url":"img/logo.svg"},{"revision":"23c02a74c76235daf1a513381ba42449","url":"img/og-image.png"},{"revision":"249f3a6448ee743c8f87f15dd0c0b48c","url":"img/paper.png"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=[],s=new URL(e,self.location.href);return s.origin!==self.location.origin||(s.search="",s.hash="",t.push(s.href),s.pathname.endsWith("/")?t.push(`${s.href}index.html`):t.push(`${s.href}/index.html`)),t}(a);for(let i=0;i<n.length;i+=1){const r=n[i],c=s.getCacheKeyForURL(r);if(c){const s=caches.match(c);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:r,possibleURLs:n,cacheKey:c,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});"SKIP_WAITING"===(t.data&&t.data.type)&&self.skipWaiting()}))})()})()})();
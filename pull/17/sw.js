(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.4.2"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.4.2"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.4.2"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.4.2"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"44c0af57d099593f0b043e9e74666e2c","url":"__docusaurus/debug.html"},{"revision":"a515d61c27d47500c66ed5ff8f4f7b7e","url":"__docusaurus/debug/config.html"},{"revision":"aa61114a2862fd728e28133fcd91ea4c","url":"__docusaurus/debug/content.html"},{"revision":"7fdcd4b508d9857e400d7ce06df782fa","url":"__docusaurus/debug/globalData.html"},{"revision":"2fe5f377e6372547e3b3da46de78da89","url":"__docusaurus/debug/metadata.html"},{"revision":"611151a1eab605519354ac2cc6f544c2","url":"__docusaurus/debug/registry.html"},{"revision":"faba4663c17cd815bb4f2b10db0ce470","url":"__docusaurus/debug/routes.html"},{"revision":"9217a911af756a0d93bb3fad1c8a5817","url":"404.html"},{"revision":"1f1a2751a697875c7044755206a513fe","url":"assets/css/styles.42631537.css"},{"revision":"6cbf227cd3388384008f42975f6d7108","url":"assets/js/08c91acd.325bdda1.js"},{"revision":"5dfc11ffdf9fbb93523c64a4d650ca53","url":"assets/js/0bb2cc19.35b79979.js"},{"revision":"4860cdbd6371c3eb1c722ce96188cf77","url":"assets/js/14eb3368.38153dbd.js"},{"revision":"ef6427c9f566ff06dc7e6370a5666e39","url":"assets/js/17896441.12f9fbc9.js"},{"revision":"df416682734039863e5cc520e0cd2ca7","url":"assets/js/19c9239f.ebf0b042.js"},{"revision":"ca880fb8158f54b0e4750de21d3cb5fa","url":"assets/js/1a4e3797.96c1cb78.js"},{"revision":"41dd0ada364152515dfa9d1f2002ee9a","url":"assets/js/1be78505.3da92d80.js"},{"revision":"7d4a59a549b2a3eff8e8dd76d68abc03","url":"assets/js/1df93b7f.f1eaa535.js"},{"revision":"c8df6bb74845a7bb5948c513effa50cd","url":"assets/js/230.025153b6.js"},{"revision":"c7d6b21ef7a68436484e1aa8ec76383c","url":"assets/js/23374ca6.9f7ab1fd.js"},{"revision":"e9f5480b1b769c2cc77af87534e04bfe","url":"assets/js/23abe487.e0e553df.js"},{"revision":"2c12fa2d0717223ceaf8bce76a17a430","url":"assets/js/246f2c6f.071f0a10.js"},{"revision":"7ecb230152e5e02c4156b430dcc5233d","url":"assets/js/278d831b.86359ec9.js"},{"revision":"0334809e12f15154f6eaea5261f094b1","url":"assets/js/27da239e.af2a9bc3.js"},{"revision":"97e8be8f25d3e24bead6178b58726544","url":"assets/js/2c700dca.8ac456cd.js"},{"revision":"0bf51ebaf38da9a2299fa59d2348eb62","url":"assets/js/2c714a47.31f2cd61.js"},{"revision":"2889f0e2eaa1ee1483bd149d4e1aca88","url":"assets/js/306aba31.7e2b9864.js"},{"revision":"6a86bf0c21f9cb02c05b764aad989de9","url":"assets/js/3450.9b3ef2c5.js"},{"revision":"972f842efaf69d885f59257264a47a82","url":"assets/js/3bd92c1c.ca525430.js"},{"revision":"634de431d50f2a365c887ffdb10aabe1","url":"assets/js/3ca010ae.58aa45fb.js"},{"revision":"e768b0974cdeee921e261dbd7e112127","url":"assets/js/3e4aadf8.f2de57b8.js"},{"revision":"3603f64b8bc52a8888d1b1aa3b53656b","url":"assets/js/417802b6.bf6c9453.js"},{"revision":"1ae53127ff8f106f4f8b51f995edd23d","url":"assets/js/444147dc.da4accbb.js"},{"revision":"51983d6af8ca8d4eab771eae1da86fbe","url":"assets/js/4542f1aa.ebd851a6.js"},{"revision":"37eb9672a74f49d8c199b2cc51d7f44e","url":"assets/js/45c35fe9.727748c0.js"},{"revision":"6150536220c3fc6a840930f351d4bc31","url":"assets/js/4608.7f3155ed.js"},{"revision":"b7599d912868e19afdd2eb146aa6afd5","url":"assets/js/4735cba8.e6a0c30e.js"},{"revision":"b699e23de071014ef2f8f4150b6e02a0","url":"assets/js/482a670a.02a8835e.js"},{"revision":"5f6fc5d18da7e30d3c70024c239174fd","url":"assets/js/5131.023cfe0f.js"},{"revision":"b634454a0456d9950c4e61cedee94a10","url":"assets/js/5283.2c52b05b.js"},{"revision":"eef3abd3a7ec7deaac69d2c8e5138ba5","url":"assets/js/6794d4cd.d8b7ef14.js"},{"revision":"ce7f72eee5e0653199ab25bcdc86e81c","url":"assets/js/6815.8f5a7408.js"},{"revision":"2abd43da321fa9a9f3e5209a467ccbcf","url":"assets/js/6856bc5e.64d4c288.js"},{"revision":"6ff6425450112c91f94f5e0478135a70","url":"assets/js/68e633d4.ea9b947b.js"},{"revision":"5a0aafccc443095b70527b12cb815750","url":"assets/js/6945.7e7c6451.js"},{"revision":"19c1089fc5993fbb0c92c22d2ba4277b","url":"assets/js/7109fcb9.3f0d43cf.js"},{"revision":"a232befbc0388c16f7655693295080de","url":"assets/js/7556a661.cfebeaaf.js"},{"revision":"6e418399e14fd570c5af493bc905088e","url":"assets/js/8894.8579f5eb.js"},{"revision":"0e250f4f5f9477d1d022adddba564110","url":"assets/js/93426447.f72ab9ca.js"},{"revision":"be2e483374b8b17351fec85d5341ae48","url":"assets/js/935f2afb.01ddaf04.js"},{"revision":"7a322fd8821db2872e2dc206d2062d6c","url":"assets/js/946bd85a.f5ef0c45.js"},{"revision":"070462c2955692d563e824ee3142a708","url":"assets/js/9720aa09.c648642e.js"},{"revision":"130bc4de34feb121164b241951ed82ad","url":"assets/js/b0dd63e9.d06e9f72.js"},{"revision":"36e3c506a399357c86cab06f05a08e32","url":"assets/js/b8c60b87.7e766d0d.js"},{"revision":"9d08d5c415a3142e54071647792def17","url":"assets/js/ba8b3534.be981aca.js"},{"revision":"ecdb936c22fbb6b13a8b3e5a865b6d9e","url":"assets/js/bd0ab364.d1f5cc48.js"},{"revision":"cc922cf984ecb9241cafd0bce5fd49c5","url":"assets/js/c19b4e8e.38214d02.js"},{"revision":"f53c864ad5fde4973ba78479270f396d","url":"assets/js/cf08fff7.cb793626.js"},{"revision":"4928a81c27fb6ae79ca1c508e8feda7e","url":"assets/js/d50d5676.2b9a029c.js"},{"revision":"8eebe0d106e30469e078707712197e4a","url":"assets/js/d70a5677.d6ab8305.js"},{"revision":"f0b45c99a270fa6ba36a5ca6ff481c87","url":"assets/js/de48decc.018177b4.js"},{"revision":"1b979f5961c9641464f19205c76c6430","url":"assets/js/decc4105.30e1f4d7.js"},{"revision":"c95359ff083699356813bb745f222d1d","url":"assets/js/df759228.d74f6eec.js"},{"revision":"49867ec420dbc0c32b080db5f755d111","url":"assets/js/e36987ae.50559557.js"},{"revision":"733b6131d30bcf1dc8326ee80072709d","url":"assets/js/ede3a018.f4472f61.js"},{"revision":"cdfea867aeb4a5a351fd95471aa8ccba","url":"assets/js/f92d365d.609d05b5.js"},{"revision":"8ef2a41e70a9d5baa6cf4794123f3c8a","url":"assets/js/fdb945e9.82c4d019.js"},{"revision":"bf2c70f4007a19ff86153f35698c4981","url":"assets/js/ff7bed0d.a1d91c57.js"},{"revision":"3599f8bced008018737f304d59d697e2","url":"assets/js/main.5ce1c6d6.js"},{"revision":"bba26a16c9e62dc7cc307b4fd44d061b","url":"assets/js/runtime~main.0a6c7cf5.js"},{"revision":"f749fc2fed72f28af4e60498ef17442b","url":"category/how-to-guides-1.html"},{"revision":"b47f9fd7074cdc29a5e2fb7cff04fbb7","url":"category/how-to-guides.html"},{"revision":"48778b56a798ec1d0e3c885f73b2a024","url":"category/reference-1.html"},{"revision":"b5623843d892f278b7c1144e59f9b8b5","url":"category/reference.html"},{"revision":"8241f3bec73e3634466ea933a496b5a0","url":"index.html"},{"revision":"d0c72c2a82d9567c3f5a012783798bfc","url":"intro.html"},{"revision":"0555d07cca8ded9d05e5d3e110a85562","url":"java-install-update.html"},{"revision":"9de0c1c99854cb76025abff99c9590c3","url":"manifest.json"},{"revision":"403eb17d0da2acd60281b636f44464c7","url":"paper.html"},{"revision":"4b34bbbfb549630eddbd5fe0419de45f","url":"paper/getting-started.html"},{"revision":"1909c87891f555a08d3c4cec6a29e240","url":"paper/how-to-update.html"},{"revision":"2141545b81f581b4147c15277ea68db5","url":"paper/how-to-use-aikars-flags.html"},{"revision":"a545a0ea3738511433e9a0dd191c190e","url":"paper/how-to-use-per-world-configuration.html"},{"revision":"f7eb0d52d0bb45aaa19d150e743daeb0","url":"paper/reference/paper-global-configuration.html"},{"revision":"505bd671a6707a862e6bed5b078bdfda","url":"paper/reference/paper-per-world-configuration.html"},{"revision":"8ab87969aec4581939a3d8c370a99833","url":"search.html"},{"revision":"a8cd34811d74ee5d012696f7bde8c43e","url":"velocity.html"},{"revision":"030fd2bb6cc24cfedf34e63773f49e03","url":"velocity/built-in-commands.html"},{"revision":"2c9bb26fdf7fa0d1c0890c4b2d9ccef7","url":"velocity/comparison-to-other-proxies.html"},{"revision":"9c7d9ae4aa1cf45987dfa4e88cbcf8c1","url":"velocity/configuration.html"},{"revision":"6ed786aeb329e55cb0307ea20c7d2e60","url":"velocity/credits.html"},{"revision":"3964adc423d0997860ea075dd32fe181","url":"velocity/developers.html"},{"revision":"91b5ec92d2b4bf1e267039acd2b67ad8","url":"velocity/developers/api-basics.html"},{"revision":"5ad2508693f9f2421be35100bcf60645","url":"velocity/developers/command-api.html"},{"revision":"4c30d7d69f3d59dc5d6f9c716c0fc90d","url":"velocity/developers/common-pitfalls.html"},{"revision":"cf42a608f575bbe51b4d47f49dd8cfef","url":"velocity/developers/creating-your-first-plugin.html"},{"revision":"e42236617f34d1dc89b7924b35fc0701","url":"velocity/developers/event-api.html"},{"revision":"7c9c38197e138ad947616ab603b67d9a","url":"velocity/developers/how-to-manage-dependencies.html"},{"revision":"6ccb2bd6e569a1dcda99975adb208959","url":"velocity/developers/how-to-port-from-velocity-1.html"},{"revision":"8ec162333aa34b777adfb0ed41acf9a4","url":"velocity/developers/scheduler-api.html"},{"revision":"34431f450c53e04cb57d189be24c830d","url":"velocity/frequently-asked-questions.html"},{"revision":"44613a12701b8058c5f3ccfec66d8b90","url":"velocity/getting-started.html"},{"revision":"85fa876adf585fc6cc69620aad092bf0","url":"velocity/how-to-migrate.html"},{"revision":"9936495daed1ee6a68c642f9423fa821","url":"velocity/how-to-secure-your-servers.html"},{"revision":"fb98da1c0c50b758ed9a9ea189a6bf55","url":"velocity/how-to-tune-velocity.html"},{"revision":"c2100cdb187127707ae2d921e6534adf","url":"velocity/player-information-forwarding.html"},{"revision":"7c812a97ca81859bbcdb31a65bcfffa1","url":"velocity/server-compatibility.html"},{"revision":"4386bd0df61222607bb742e22192d339","url":"velocity/why-velocity.html"},{"revision":"0957ce36336d1032bce22b52e98b828a","url":"waterfall.html"},{"revision":"e7b8f8ba35aa1ffb86af53aba8cbd7d8","url":"waterfall/configuration.html"},{"revision":"f923cb235d9275c8e766c27f6e8646a6","url":"assets/images/pterodactyl-prompt-08eaa04490182b153a7e203d414da64b.png"},{"revision":"27a331ad0d4f9b1b056d7aa7c497380c","url":"img/favicon.ico"},{"revision":"cf40f7154e8833e87c5a15b3c19cec64","url":"img/icons/icon-128x128.png"},{"revision":"d8c14f548f07f8b9f34900842e514de3","url":"img/icons/icon-144x144.png"},{"revision":"2352005bdb6116062586418be2feb0ee","url":"img/icons/icon-152x152.png"},{"revision":"69e1e4818e8c72f0b3faf7a71abeda26","url":"img/icons/icon-192x192.png"},{"revision":"e603d44fde637d0428169e42314c3039","url":"img/icons/icon-384x384.png"},{"revision":"ebde541848f562b741056bde05472bba","url":"img/icons/icon-512x512.png"},{"revision":"1fbf5b497e5d12fd86393175f9eaf139","url":"img/icons/icon-72x72.png"},{"revision":"50adede2c2bda637f507879fbb543480","url":"img/icons/icon-96x96.png"},{"revision":"69b156c91d208aff640e1016c38fb004","url":"img/logo.svg"},{"revision":"a9da426ad5475220ef18653219fd74de","url":"img/og-image.png"},{"revision":"249f3a6448ee743c8f87f15dd0c0b48c","url":"img/paper.png"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=[],s=new URL(e,self.location.href);return s.origin!==self.location.origin||(s.search="",s.hash="",t.push(s.href),s.pathname.endsWith("/")?t.push(`${s.href}index.html`):t.push(`${s.href}/index.html`)),t}(a);for(let i=0;i<n.length;i+=1){const r=n[i],c=s.getCacheKeyForURL(r);if(c){const s=caches.match(c);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:r,possibleURLs:n,cacheKey:c,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});"SKIP_WAITING"===(t.data&&t.data.type)&&self.skipWaiting()}))})()})()})();